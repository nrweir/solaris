name: ubuntu1604-miniconda-build

on: [push]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        os: [ubuntu-16.04, macOS-latest]
        python-version: [3.6, 3.7]

    steps:
    - uses: actions/checkout@v1

    - name: Install miniconda
      run: |
        if [ "${{ matrix.os }}" == "macOS-latest" ]; then
           sudo wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.5.11-macOSX-x86_64.sh -O ~/miniconda.sh;
           else sudo wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.5.11-Linux-x86_64.sh -O ~/miniconda.sh;
        fi
        sudo /bin/bash ~/miniconda.sh -b -p /opt/conda
        sudo rm ~/miniconda.sh
        sudo /opt/conda/bin/conda clean -tipsy
        sudo ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh
        sudo echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc
        source /opt/conda/etc/profile.d/conda.sh
        conda activate
        TINI_VERSION=v0.16.1
        sudo wget --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini -O /usr/bin/tini && sudo chmod +x /usr/bin/tini
        conda config --set always_yes yes
    - name: Install dependencies + solaris then run tests
      run: |
        CODECOV_TOKEN="fb919376-3e20-41a9-8612-051c1e7a05da"  # change this for the CosmiQ version
        sed -i -E 's/(python=)(.*)/\1'${{ matrix.python-version }}'/' ./environment.yml  # update python version in environment.yml
        source /opt/conda/etc/profile.d/conda.sh
        sudo conda env create -p /opt/conda/envs/solaris -f environment.yml  # install dependencies
        conda list -n solaris
        conda activate solaris
        python --version
        sudo /opt/conda/envs/solaris/bin/pip install -e .[test] -vvv  # install solaris
        sudo conda install pytest=4.6.2 -c conda-forge  # install pytest
        sudo /opt/conda/envs/solaris/bin/pip install codecov pytest-cov  # install codecov support
        python -m pytest --cov=./ && codecov  # run pytests, then codecov
